version: "3"

services:
  web:
    command: make web-prod
    image: anikalaw/clerk:latest
    ports:
      - 8001:8001
    volumes:
      - /var/run/postgresql:/app/postgres.sock
      - /var/log/clerk/test/web:/var/log
    environment:
      DJANGO_SETTINGS_MODULE: clerk.settings.staging
      GUNICORN_PORT: 8001
      PGHOST: /app/postgres.sock
      PGPORT: 5432
      PGDATABASE: clerk-test
      PGUSER: $PGUSER
      PGPASSWORD: $PGPASSWORD
      # Pass through
      DJANGO_SECRET_KEY: $DJANGO_SECRET_KEY
      SENDGRID_API_KEY: $SENDGRID_API_KEY
      AWS_ACCESS_KEY_ID: $AWS_ACCESS_KEY_ID
      AWS_SECRET_ACCESS_KEY: $AWS_SECRET_ACCESS_KEY
      RAVEN_DSN: $RAVEN_DSN

  worker:
    command: make worker-prod
    image: anikalaw/clerk:latest
    volumes:
      - /var/run/postgresql:/app/postgres.sock
      - /var/log/clerk/test/worker:/var/log
    environment:
      DJANGO_SETTINGS_MODULE: clerk.settings.staging
      PGHOST: /app/postgres.sock
      PGPORT: 5432
      PGDATABASE: clerk-test
      PGUSER: $PGUSER
      PGPASSWORD: $PGPASSWORD
      # Pass through
      DJANGO_SECRET_KEY: $DJANGO_SECRET_KEY
      SENDGRID_API_KEY: $SENDGRID_API_KEY
      AWS_ACCESS_KEY_ID: $AWS_ACCESS_KEY_ID
      AWS_SECRET_ACCESS_KEY: $AWS_SECRET_ACCESS_KEY
      RAVEN_DSN: $RAVEN_DSN

  # Reporting server.
  streamlit:
    command: streamlit hello --browser.serverAddress localhost
    image: anikalaw/clerk:latest
    volumes:
      - /var/run/postgresql:/app/postgres.sock
    ports:
      - 8501:8501
    environment:
      DJANGO_SETTINGS_MODULE: clerk.settings.staging
      PGHOST: /app/postgres.sock
      PGPORT: 5432
      PGDATABASE: clerk-test
      DJANGO_SECRET_KEY: $DJANGO_SECRET_KEY
      PGUSER: $PGUSER
      PGPASSWORD: $PGPASSWORD
