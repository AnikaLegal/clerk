# Generated by Django 4.0.10 on 2023-12-22 03:01

from django.db import migrations, models

import logging
from pathlib import Path

LOGGER = logging.getLogger("migration")
NAME = Path(__file__).stem


def _migrate_weekly_income_to_case(apps, schema_editor):
    Client = apps.get_model("core", "Client")
    Issue = apps.get_model("core", "Issue")

    LOGGER.info("Migration: %s", NAME)

    for client in Client.objects.all():
        if client.weekly_income is not None:
            issues = Issue.objects.filter(client=client)

            # The client has multiple issues. We don't which one the weekly
            # income "belongs" to, so we make a note.
            if issues.count() > 1:
                LOGGER.info("%s: CLIENT %s - MULTIPLE_ISSUES", NAME, client.pk)

            for issue in issues:
                issue.weekly_income = client.weekly_income
                issue.save()


class Migration(migrations.Migration):
    dependencies = [
        ("core", "0061_remove_client_employment_status_and_more"),
    ]

    operations = [
        migrations.AddField(
            model_name="issue",
            name="weekly_income",
            field=models.IntegerField(blank=True, null=True),
        ),
        migrations.RunPython(
            _migrate_weekly_income_to_case, reverse_code=migrations.RunPython.noop
        ),
        migrations.RemoveField(
            model_name="client",
            name="weekly_income",
        ),
    ]
