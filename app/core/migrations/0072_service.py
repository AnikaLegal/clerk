# Generated by Django 5.1.1 on 2024-09-20 05:52

import core.models.service
import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("core", "0071_alter_issue_outcome_notes"),
    ]

    operations = [
        migrations.CreateModel(
            name="Service",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(default=django.utils.timezone.now)),
                (
                    "modified_at",
                    models.DateTimeField(default=django.utils.timezone.now),
                ),
                (
                    "category",
                    models.CharField(
                        choices=[
                            ("DISCRETE", "Discrete service"),
                            ("ONGOING", "Ongoing service"),
                        ],
                        max_length=32,
                    ),
                ),
                (
                    "type",
                    models.CharField(
                        choices=[
                            ("LEGAL_ADVICE", "Legal advice"),
                            ("LEGAL_TASK", "Legal task"),
                            ("GENERAL_INFORMATION", "Information"),
                            ("GENERAL_REFERRAL_SIMPLE", "Referral (Simple)"),
                            ("GENERAL_REFERRAL_FACILITATED", "Referral (Facilitated)"),
                            ("LEGAL_SUPPORT", "Legal support"),
                            (
                                "REPRESENTATION_COURT_TRIBUNAL",
                                "Court or tribunal representation",
                            ),
                            ("REPRESENTATION_OTHER", "Other representation"),
                        ],
                        max_length=64,
                    ),
                ),
                ("started_at", models.DateField(default=django.utils.timezone.now)),
                ("notes", models.TextField(blank=True, null=True)),
                ("count", models.IntegerField(blank=True, null=True)),
                ("finished_at", models.DateField(blank=True, null=True)),
                (
                    "issue",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="core.issue"
                    ),
                ),
            ],
            options={
                "constraints": [
                    models.CheckConstraint(
                        condition=models.Q(
                            models.Q(
                                ("category", "DISCRETE"),
                                ("type__in", core.models.service.DiscreteServiceType),
                            ),
                            models.Q(
                                ("category", "ONGOING"),
                                ("type__in", core.models.service.OngoingServiceType),
                            ),
                            _connector="OR",
                        ),
                        name="core_service_service_type_by_category",
                        violation_error_message="Service type does not belong to that service category",
                    )
                ],
            },
        ),
    ]
