# Generated by Django 4.0.10 on 2024-07-16 04:07

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import utils.uploads


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("core", "0072_alter_issueevent_event_type"),
    ]

    operations = [
        migrations.CreateModel(
            name="Task",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(default=django.utils.timezone.now)),
                (
                    "modified_at",
                    models.DateTimeField(default=django.utils.timezone.now),
                ),
                (
                    "type",
                    models.CharField(
                        choices=[
                            ("CHECK", "Check for conflict/eligibility"),
                            ("CONTACT", "Contact client or other party"),
                            ("DRAFT", "Draft document or advice"),
                            ("REVIEW", "Review document or advice"),
                            ("SEND", "Send document or advice"),
                            ("OTHER", "Other"),
                        ],
                        max_length=32,
                    ),
                ),
                ("name", models.CharField(max_length=64)),
                ("description", models.TextField(blank=True, default="")),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("NOT_STARTED", "Not started"),
                            ("IN_PROGRESS", "In progress"),
                            ("DONE", "Done"),
                            ("NOT_DONE", "Not done"),
                        ],
                        default="NOT_STARTED",
                        max_length=32,
                    ),
                ),
                (
                    "closed_at",
                    models.DateTimeField(blank=True, default=None, null=True),
                ),
                ("is_open", models.BooleanField(default=True)),
                ("is_suspended", models.BooleanField(default=False)),
                ("is_notify_pending", models.BooleanField(default=False)),
                ("is_system_update", models.BooleanField(default=False)),
                (
                    "prev_owner_role",
                    models.CharField(
                        blank=True,
                        choices=[("PARALEGAL", "Paralegal"), ("LAWYER", "Lawyer")],
                        default=None,
                        max_length=32,
                        null=True,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="TaskAttachment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("file", models.FileField(upload_to=utils.uploads.get_s3_key)),
                ("content_type", models.CharField(max_length=128)),
                ("created_at", models.DateTimeField(default=django.utils.timezone.now)),
                (
                    "sharepoint_state",
                    models.CharField(
                        choices=[
                            ("NOT_UPLOADED", "Not uploaded"),
                            ("UPLOADING", "Uploading"),
                            ("UPLOADED", "Uploaded"),
                        ],
                        default="NOT_UPLOADED",
                        max_length=16,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="TaskComment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(default=django.utils.timezone.now)),
                (
                    "modified_at",
                    models.DateTimeField(default=django.utils.timezone.now),
                ),
                (
                    "type",
                    models.CharField(
                        choices=[
                            ("SYSTEM", "System generated"),
                            ("USER", "User created"),
                        ],
                        max_length=32,
                    ),
                ),
                ("text", models.TextField(blank=True, default="")),
                ("richtext", models.JSONField(blank=True, null=True)),
            ],
            options={
                "verbose_name": "comment",
            },
        ),
        migrations.CreateModel(
            name="TaskTemplate",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(default=django.utils.timezone.now)),
                (
                    "modified_at",
                    models.DateTimeField(default=django.utils.timezone.now),
                ),
                (
                    "type",
                    models.CharField(
                        choices=[
                            ("CHECK", "Check for conflict/eligibility"),
                            ("CONTACT", "Contact client or other party"),
                            ("DRAFT", "Draft document or advice"),
                            ("REVIEW", "Review document or advice"),
                            ("SEND", "Send document or advice"),
                            ("OTHER", "Other"),
                        ],
                        max_length=32,
                    ),
                ),
                ("name", models.CharField(max_length=64)),
                ("description", models.TextField(blank=True, default="")),
            ],
            options={
                "verbose_name": "template",
            },
        ),
        migrations.CreateModel(
            name="TaskTrigger",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(default=django.utils.timezone.now)),
                (
                    "modified_at",
                    models.DateTimeField(default=django.utils.timezone.now),
                ),
                (
                    "topic",
                    models.CharField(
                        choices=[
                            ("ANY", "Any"),
                            ("REPAIRS", "Repairs"),
                            ("BONDS", "Bonds"),
                            ("EVICTION", "Eviction"),
                            ("HEALTH_CHECK", "Housing Health Check"),
                        ],
                        max_length=32,
                    ),
                ),
                (
                    "event",
                    models.CharField(
                        choices=[
                            ("CREATE", "Created"),
                            ("LAWYER", "Lawyer assigned"),
                            ("PARALEGAL", "Paralegal assigned"),
                            ("STAGE", "Stage change"),
                            ("OPEN", "Open change"),
                        ],
                        max_length=32,
                    ),
                ),
                (
                    "event_stage",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("UNSTARTED", "Not started"),
                            ("CLIENT_AGREEMENT", "Client agreement"),
                            ("ADVICE", "Drafting advice"),
                            ("FORMAL_LETTER", "Formal letter sent"),
                            ("NEGOTIATIONS", "Negotiations"),
                            ("VCAT_CAV", "VCAT/CAV"),
                            ("POST_CASE_INTERVIEW", "Post-case interview"),
                            ("CLOSED", "Closed"),
                        ],
                        default=None,
                        max_length=32,
                        null=True,
                    ),
                ),
                (
                    "tasks_assignment_role",
                    models.CharField(
                        choices=[
                            ("PARALEGAL", "Paralegal"),
                            ("LAWYER", "Lawyer"),
                            ("COORDINATOR", "Coordinators"),
                        ],
                        max_length=32,
                    ),
                ),
            ],
            options={
                "verbose_name": "trigger",
            },
        ),
        migrations.AddConstraint(
            model_name="tasktrigger",
            constraint=models.CheckConstraint(
                check=models.Q(
                    models.Q(("event", "STAGE"), _negated=True),
                    ("event_stage__isnull", False),
                    _connector="OR",
                ),
                name="task_tasktrigger_event_stage_required",
            ),
        ),
        migrations.AddField(
            model_name="tasktemplate",
            name="trigger",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="templates",
                related_query_name="template",
                to="task.tasktrigger",
            ),
        ),
        migrations.AddField(
            model_name="taskcomment",
            name="creator",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.PROTECT,
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="taskcomment",
            name="task",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="comments",
                related_query_name="comment",
                to="task.task",
            ),
        ),
        migrations.AddField(
            model_name="taskattachment",
            name="comment",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to="task.taskcomment",
            ),
        ),
        migrations.AddField(
            model_name="taskattachment",
            name="task",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="attachments",
                related_query_name="attachment",
                to="task.task",
            ),
        ),
        migrations.AddField(
            model_name="task",
            name="assigned_to",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.PROTECT,
                related_name="+",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="task",
            name="issue",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="core.issue"
            ),
        ),
        migrations.AddField(
            model_name="task",
            name="owner",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.PROTECT,
                related_name="+",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="task",
            name="template",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.PROTECT,
                to="task.tasktemplate",
            ),
        ),
        migrations.AlterOrderWithRespectTo(
            name="tasktemplate",
            order_with_respect_to="trigger",
        ),
    ]
